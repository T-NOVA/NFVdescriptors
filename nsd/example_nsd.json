{
    "ns_id": 123,
    "name": "NS name",
    "description": "A very simple NS",
    "vendor": "T-NOVA",
    "version": "1.0",
    "vnfs": [
        "1", /* NFStore-generated IDs */
        "23"
    ],
    "vnffgd": [
        /* to be decided later */
    ],
    "vld": [
        /* to be decided later */
    ],
    "lifecycle_events": [
        /* to be decided later */
    ],
    "vnf_dependencies": [
        "23", /* NFStore-generated IDs */
        "1"
    ],
    "monitoring_parameters": [{
        "name": "availability",
        "description": "Percentage of time the NS has been available over the last 365 days",
        "unit": "%"
    }, {
        "name": "ram-consumption",
        "description": "Amount of RAM memory consumed by the service",
        "unit": "MB"
    }],
    "assurance_parameters": [
        /* the values are calculated based on the values of the VNF selected flavour */
        {
            "param_id": "availability",
            "value": "GT(min(vnfs[1].availability, vnfs[2].availability))",
            "violation": {
                "breaches_count": 5,
                "interval": 120,
                "penalty": "not included, as they're not relevant to the Orchestrator"
            }
        }, {
            "param_id": "ram-consumption",
            "value": "LT(add(vnfs[1].memory-consumption, vnfs[2].memory-consumption, 100))",
            /* allow 100MB extra over the combined consumption by the VNFs */
            "violation": {
                "breaches_count": 5,
                "interval": 120,
                "penalty": "not included, as they're not relevant to the Orchrstrator"
            }
        }
    ],
    "service_deployment_flavours": [{}],
    "auto_scale_policies": [
        /* to be decided later */
        /* the triggering parameters for the lifecycle_events scaling script */
    ],
    "connection_points": [
        /* ingress, egress -- examples? */
        /* depends on the kind of service -- physical ports, ... */
    ]
}

# YAML VNFD transscripted from ETSI VNFD - T-NOVA VNFD and OpenMANO examples
# Version: 2.0 
# Date: 23/09/2015 
# Copyright: T-NOVA Consortium
# Info: Template for single VNFC VNF 
# Changelog: Initial version

vnf:
-	release: "T-NOVA v0.2"		#release information
	id: "547365784365"			#NFStore provides the rules, not know prior to uploading and cannot be referenced on time zero
	provider: "NCSRD"			#Provider(T-NOVA) - Vendor (ETSI)
	provider_id: "FP56453"		#FP given by ID by the Marketplace
	description: "The function identifies, classifies and forwards network traffic according to policies"
	descriptor_version": "0.1"
	version: "0.22"
	manifest_file_md5: "md5 hash" # Calculated by the NFStore during upload
	type: "forwarder"
#	deployment_mode: 
#		# the information here affects the way the VNF interacts with the network
#		networking: "L2",
#		nature: "active",
#		layer: "dataplane"
	date_created: "2015-09-14T16:10:00Z" #Auto inserted at the Marketplace
	date_modified: "2015-09-14T16:10:00Z" # Auto inserted at the Marketplace (to bechecked)
	trade: "TRUE"
	billing_model: 
		model: "PAYG"  #Valid Options are PAYG and Revenue Sharing (RS)
		period: "P1W"	# Per 1 week, e.g. P1D per 1 day
		price:
			unit: "EUR" 
			min_per_period: 5
			max_per_period: 10
			setup: 0
	
	# VDU is the section where the VM properties should be referenced. This template should contain one VDU = 1 VM = 1VNFC and is providing a single flavour
	
	vnf_lifecycle_event:
	#VNF lifecycle events redirect to the appropriate VDU lifecycle events below and reference the vdu ids.
		 
		events: 
		- 	event: "start"
		    -	vdu_id: "vdu0"
				 vdu_event: "start"
			
		-	event: "stop"	
		    -	vdu_id: "vdu0"
				 vdu_event: "stop"
		
		-	event: "restart"
		
		-	event: "scale-in"
		
		-	event: "scale-out"
	vdu: 
		id: "vdu0" # VDUs numbered in sequence  (TBD)
		vm_image: "http://store.t-nova.eu/NCSRDv/TC_ncsrd.v.022.qcow" # URL that contains the 
		vm_image_md5: "^&#*^&*$&^&#^$#%@849563476583767281631" # generated by the NFStore (TBD)
		
		# VDU instantiation resources 
		
	resource_requirements: 
			vcpus: 2	
			memory: 2 # Provided in GB
			storage: 
				size: 20 #Size in GB 
				persistence: "FALSE" #storage persistence
			
			cpu_support_accelerator: "AES-NI" #Opt. if accelarators are required 
			
			memory_parameters: #Optional
				large_pages_required: ""
				NUMA_allocation_policy: ""
			
			hypervisor_parameters: 
				type: "QEMU-KVM"
				version: "10002|12001|2.6.32-358.el6.x86_64"
						
			platform_pcie_parameters: #OPT required if SR-IOV is used for graphics accelaration
				device_pass_through: "True"
				SR-IOV: "True"
	
			network_interface_card_capabilities: 
				mirroring: "FALSE"
				SR-IOV: "TRUE"
			
			network_interface_bandwidth: "10Gbps"
			data_processing_acceleration_library: "eg DPDK v1.0"
			
			vswitch_capabilities:
				type: "ovs"
				version: "2.0"
				overlay_tunnel: "GRE"
			
			
	
		networking_resources: #(TBD)
		
		#VDU Lifecycle enents 
		
		vdu_lifecycle_event:
		-	driver: "ssh"
			authentication_type: "PubKeyAuthenitcation" # During instantiation (vm bootstrap), a public generated key by the VNFM should be injected in the configuration of the VM (TBD)
		-	driver: "https"
			authentication_type: "Digest" #(TBD) 
			events: 
			- 	event: "start"
			    command :"service xxx start",
			    template_file_format":"json",
			    template_file: "{ \"controller\":\"cntr_IP\", \"vdu1\":\"vdu1_IP\", \"vdu2\":\"vdu2_IP\" }"
				
			-	event: "stop"	
			    command:"service vtc stop"
			    template_file_format:"json"
			    template_file:"{\"controller\":\"cntr_IP\",\"vdu1\":\"vdu1_IP\",\"vdu2\":\"vdu2_IP\"}"
		 	        
			-	event: "stop"	
			    command:"service vtc shutoff"
			    template_file_format:"json"
			    template_file:"{\"controller\":\"cntr_IP\",\"vdu1\":\"vdu1_IP\",\"vdu2\":\"vdu2_IP\"}"
			
			-	event: "restart"
			
			-	event: "scale-in" 
			
			-	event: "scale-out"		
		# VDU Scaling config
		
		scale_in_out: #number of instances for scaling allowed
			minimum: 1 #min number of instances
			maximum: 5 #max number of instances, if max=min then no scaling is allowed
		
		# VNFC specific networking config
		
		vnfc:
			id: "vdu0:vnfc0" #incremental reference of VNFCs in the VDU
			
		
			networking:
			# Start of T-NOVA networking section --------------------------
			-	connection_point_id: "mngt0" # for monitoring and management purposes
				vitual_link_reference: "TO COMPLETE"
				type: "" # The type of interface i.e floating_ip, vnic, tap "TO COMPLETE"
				bandwidth: # informative
			-	connection_point_id: "data0" # datapath interface 
				vitual_link_reference: "TO COMPLETE"
				type: "" # The type of interface i.e floating_ip, vnic, tap "TO COMPLETE"
				bandwidth: # informative
			-	connection_point_id: "data1"
				vitual_link_reference: "TO COMPLETE"
				type: "" # The type of interface i.e floating_ip, vnic, tap "TO COMPLETE"
				bandwidth: # informative
			- 	connection_point_id: "store0"
			  	vitual_link_reference: "TO COMPLETE"
				type: "" # The type of interface i.e floating_ip, vnic, tap "TO COMPLETE"
				bandwidth: # informative
			# END of T-NOVA networking section 
			
			
		vlink:
		# T-NOVA VL Section ------------------------------------
		-	vl_id: "mngt"
			connectivity_type: "E-Line"
			connection_points_reference: ["mngt0", "TO BE COMPLETED"]
			root_requirement: "10Gbps" 
			leaf_requirement: "10Gbps" #Used only for E-tree
			qos: "" #optional
			test_access: "none" #optional
		-	vl_id: "data"
			connectivity_type: "E-LAN"
			connection_points_reference: ["data0", "data1", "TO BE COMPLETED", "TO BE COMPLETED"]
			root_requirement: "10Gbps" 
			leaf_requirement: "10Gbps" #Used only for E-tree
			qos: "" #optional
			test_access: "none" #optional
		-	vl_id: "store"
			connectivity_type: "E-Line"
			connection_points_reference: ["store0", "TO BE COMPLETED"]
			root_requirement: "10Gbps" 
			leaf_requirement: "10Gbps" #Used only for E-tree
			qos: "" #optional
			test_access: "none" #optional
			
		# END of T-NOVA VL Section -----------------------------------------
							
		
	monitoring_parameters: 
		generic: ["cpu", "memory_total", "memory_free", "memory_used", "disk_io", "disk_free", "bps in", "bps out", "packets_in", "packets_out", "errors", "dropped"]
		specific:["number_of_flows", "number_of_flows_classified", "dropped_packets"]
				# example functionality is the vTC
				
	auto_scale_policy: 
	-	policy: "policy1"
		type: "number_of_flows"
		threshold: "100K"
		action_type: "TO BE COMPLETED e.g flavour ID" 
		
# VNF Flavour section + SLS 

	deployment_flavour: 
		-	flavour_id: "vnfd0:flavour0"
			flavour_key: "flows_fw_100K" # this flavour will support 100K
			constraint: "specific HW constrain" #TBD
			constituent_vdu: 
					vdu_reference: "vdu0"
					number_of_instances: "1"
					constituent_vnfc: "vd0:vnfc0"
			assurance_parameters:
       		-	param_id: "memory-consumption"
        	value: 1 
          	unit: "GB"
			formula: "memory-consumption LT 1"
            violation: 
				[{"breaches_count":"2", "interval":"30"},{"breaches_count":"5", "interval":"120"}]	
			penalty: {"type" : "discount","value": "5","unit": "percentage","validity": "P1D"}
        -	param_id:"CPU-utilization"
          	value: 85
          	unit:"percentage"
          	formula: "CPU-utilization LT 0.85"
            violation: 
				[{"breaches_count": "2","interval": "30"}]
			penalty: {"type" :"discount","value": "5","unit":"percentage","validity": "P1D"} 
				
				
				
		
			
		
		
				 
				
				
				
		
		
			
	
	
	